#!/usr/bin/env python
version = open('VERSION').readline().strip()

global_bindings = { 'version': version }
namespaces = {
              'prod'    : ''
              }

def get_branch():
    import os
    return os.popen("git symbolic-ref -q HEAD") \
             .read() \
             .rstrip() \
             .split('/')[-1]

def main():
    modules = ['default', 'background']
    for module in modules:
        src = 'war/%s/WEB-INF/appengine-web-template.xml' % module
        target = 'war/%s/WEB-INF/appengine-web.xml' % module

        branch = get_branch()

        bindings = global_bindings.copy()
        bindings['branch'] = branch
        bindings['namespace'] = namespaces[branch] if branch in namespaces else 'dev'

        def format(line):
            return line.format(**bindings)

        with open(src, 'r') as src_f:
            with open(target, 'w') as target_f:
                target_f.write('<!-- Autogenerated file do not edit. Edit %s and run "make all". -->\n' % src)
                target_f.writelines(map(format, src_f.readlines()))

        print 'Updating appengine-web.xml with for module: "%s" branch: "%s" bindings: "%s"' % \
              (module, branch, bindings)

if __name__ == '__main__':
    main();
